{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,kBACrCE,YAAaH,SAASC,cAAc,iBACpCG,cAAeJ,SAASC,cAAc,oBAmBxC,SAASI,GAAcC,SAAEA,EAAQC,MAAEA,IACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAzBbT,EAAKC,OAAOgB,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAEC,iBACF,IAAIV,EAAQW,OAAOpB,EAAKI,aAAaiB,OACjCC,EAAOF,OAAOpB,EAAKK,YAAYgB,OAC/BE,EAASH,OAAOpB,EAAKM,cAAce,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAc,CAAEC,SAAUgB,EAAGf,MAAOA,IACjCgB,MAAKC,GAAU5B,EAAA6B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD,KACjCrB,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delayInputEl.value);\n  let step = Number(refs.stepInputEl.value);\n  let amount = Number(refs.amountInputEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ position: i, delay: delay })\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    delay += step;\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayInputEl","stepInputEl","amountInputEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","step","amount","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.883fd85c.js.map"}