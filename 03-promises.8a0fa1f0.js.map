{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,kBACrCE,YAAaH,SAASC,cAAc,iBACpCG,cAAeJ,SAASC,cAAc,oBAmBxC,SAASI,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACjC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAzBPV,EAAKC,OAAOkB,iBAAiB,UAE7B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIX,EAAQY,OAAOtB,EAAKI,aAAamB,OACjCC,EAAOF,OAAOtB,EAAKK,YAAYkB,OAC/BE,EAASH,OAAOtB,EAAKM,cAAciB,OAE9BG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAc,CAAEE,SAAUiB,EAAGhB,MAAOA,IACjCiB,MAAK,SAAAC,G,OAAU9B,EAAA+B,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAC,G,OAASlC,EAAA+B,OAAOI,QAAQD,E,IACjCtB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delayInputEl.value);\n  let step = Number(refs.stepInputEl.value);\n  let amount = Number(refs.amountInputEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ position: i, delay: delay })\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    delay += step;\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delayInputEl","stepInputEl","amountInputEl","$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","Number","value","step","amount","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.8a0fa1f0.js.map"}